<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[dongjinjo]]></title><description><![CDATA[Blog by dongjinjo]]></description><link>http://github.com/dylang/node-rss</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 18 Oct 2019 01:38:55 GMT</lastBuildDate><item><title><![CDATA[tmux 사용법]]></title><description><![CDATA[tmux(terminal multiplexer) 구성 방법 및 단축키 정리]]></description><link>https://dongjinjo.github.io/posts/tmux-guide</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/tmux-guide</guid><pubDate>Fri, 18 Oct 2019 00:00:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;tmux(terminal multiplexer) 구성 방법 및 단축키 정리&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;1.tmux 설치&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; tmux&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2.tmux 용어 정리&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sessions : tmux 기본 실행 단위&lt;/li&gt;
&lt;li&gt;windows : session에 존재하는 탭&lt;/li&gt;
&lt;li&gt;panes : windows 내에서 화면을 분할 하여 사용&lt;/li&gt;
&lt;li&gt;prefix : tmux 단축키를 사용하기 전에 입력해야 하는 키 조합(Default : &lt;code class=&quot;language-text&quot;&gt;ctrl + b&lt;/code&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3.tmux 단축키&lt;/h2&gt;
&lt;h3&gt;3.1.sessions&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# session 생성&lt;/span&gt;
tmux
tmux new -s &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;session name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# session 목록 조회&lt;/span&gt;
tmux &lt;span class=&quot;token function&quot;&gt;ls&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# session attach&lt;/span&gt;
tmux attach
tmux attach -t &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;session name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# session detach(session 내에서)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + d

&lt;span class=&quot;token comment&quot;&gt;# session 강제 종료&lt;/span&gt;
tmux kill-session -t &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;session name&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.3.windows&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# windows 생성&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + c

&lt;span class=&quot;token comment&quot;&gt;# 윈도우 이름 변경&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + ,

&lt;span class=&quot;token comment&quot;&gt;# window 이동&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## next&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + n
&lt;span class=&quot;token comment&quot;&gt;## previous&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + p

&lt;span class=&quot;token comment&quot;&gt;## 특정 window로 이동&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;window number&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.4.panes&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# pane 분할&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## 횡&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + %
&lt;span class=&quot;token comment&quot;&gt;## 종&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + &quot;

&lt;span class=&quot;token comment&quot;&gt;# pane 이동&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## 지정&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + q + &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;화면에 표시되는 숫자&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## 순차&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + o

&lt;span class=&quot;token comment&quot;&gt;# pane 삭제&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + x
ctrl + d

&lt;span class=&quot;token comment&quot;&gt;# pane size 변경&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## command prompt 진입 후(&amp;lt;prefix&gt; + :)&lt;/span&gt;
resize-pane -L &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
resize-pane -R &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
resize-pane -D &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;
resize-pane -U &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# pane layout 변경&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prefix&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; + spacebar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3.5. 추가 옵션&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# pane 전체에 키입력 보내기(동시 입력)&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;## command prompt 진입 후(&amp;lt;prefix&gt; + :)&lt;/span&gt;
setw synchronize-panes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot;&gt;https://github.com/tmux/tmux/wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://man.openbsd.org/OpenBSD-current/man1/tmux.1&quot;&gt;http://man.openbsd.org/OpenBSD-current/man1/tmux.1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Upgraded to Gatsby v2]]></title><description><![CDATA[This starter has been forked and upgraded to Gatsby v2]]></description><link>https://dongjinjo.github.io/posts/upgraded-to-gatsby-v2/</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/upgraded-to-gatsby-v2/</guid><pubDate>Thu, 18 Oct 2018 16:51:00 GMT</pubDate><content:encoded>&lt;p&gt;This is a Gatsby v2 compatible version of the
&lt;a href=&quot;https://github.com/alxshelepenok/gatsby-starter-lumen&quot;&gt;lumen&lt;/a&gt; starter, started
by the folks at &lt;a href=&quot;https://www.gatsbycentral.com/&quot;&gt;Gatsby Central&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here’s a little recommended reading for Gatsby v2.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, &lt;a href=&quot;https://www.gatsbycentral.com/whats-new-in-gatsby-v2&quot;&gt;what’s new in v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Next, &lt;a href=&quot;https://www.gatsbycentral.com/when-should-i-upgrade-to-gatsby-v2&quot;&gt;when should I upgrade?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.org/blog/2018-09-17-gatsby-v2/&quot;&gt;The Gatsby v2 announcement blog post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you &lt;strong&gt;do decide to upgrade&lt;/strong&gt;, these articles will help you do that.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbycentral.com/getting-started-with-gatsby-v2&quot;&gt;Getting started with Gatsby v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbycentral.com/should-i-rebuild-my-site-for-gatsby-v2&quot;&gt;Should I rebuild my site for Gatsby v2?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbycentral.com/how-do-layouts-work-in-gatsby-v2&quot;&gt;How do layouts work in Gatsby v2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbycentral.com/staticquery-in-gatsby-v2&quot;&gt;StaticQuery in Gatsby v2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, here’s a cheat sheet we prepared to help during the upgrade:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.gatsbycentral.com/gatsby-v2-refactoring-cheat-sheet&quot;&gt;Gatsby v2 refactoring cheat sheet&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# echo &amp;quot;aaa&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[log file 모니터링 시 Permission Denied 오류 수정]]></title><description><![CDATA[zabbix를 이용한 log file 모니터링 시 발생 하는 Permission Denied 오류 수정]]></description><link>https://dongjinjo.github.io/posts/zabbix-permission-denied</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/zabbix-permission-denied</guid><pubDate>Thu, 18 Oct 2018 16:51:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;zabbix를 이용한 log file 모니터링 시 발생 하는 Permission Denied 오류 수정&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;현상&lt;/h2&gt;
&lt;p&gt;Item(&lt;code class=&quot;language-text&quot;&gt;log&lt;/code&gt;) 등록 후 Permission Denied 오류 발생
![img01]({{ “/assets/images/2018-09-04-zabbix-permission-denied-03.png” | absolute_url }})&lt;/p&gt;
&lt;h2&gt;원인&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;zabbix&lt;/code&gt; 계정이 해당 file에 접근 할 수 없어 Permission Denied 오류 발생.&lt;/p&gt;
&lt;p&gt;zabbix agent를 통해 수행 되는 명령은 &lt;code class=&quot;language-text&quot;&gt;zabbix&lt;/code&gt; 계정으로 수행
{: .notice—info}&lt;/p&gt;
&lt;h2&gt;해결 방안&lt;/h2&gt;
&lt;p&gt;log file 그룹에 &lt;code class=&quot;language-text&quot;&gt;zabbix&lt;/code&gt; 추가.&lt;/p&gt;
&lt;h3&gt;1. zabbix 계정 권한 및 그룹 확인&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# id zabbix &lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;129&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. log file 계정 및 그룹 확인&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# ls -al /var/log/mysql/mysqld.log&lt;/span&gt;
-rw-r----- &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; mysql adm &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; Sep  &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt; 00:00 /var/log/mysql/mysqld.log&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3. log file 그룹(adm)에 zabbix 계정 추가&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# usermod -G adm zabbix&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# id zabbix&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;129&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;135&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;zabbix&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;,4&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;adm&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[MySQL Key 생성 및 Item 설정]]></title><description><![CDATA[Zabbix의 MySQL용 Key 생성 및 Item 설정 방법]]></description><link>https://dongjinjo.github.io/posts/zabbix-mysql-key</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/zabbix-mysql-key</guid><pubDate>Thu, 18 Oct 2018 16:51:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Zabbix의 MySQL용 Key 생성 및 Item 설정 방법&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;MySQL 인증 설정&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# /var/lib/zabbix/.my.cnf&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mysql&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ip addr&apos;&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;mysqladmin&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ip addr&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;UserParameter.conf 추가&lt;/h2&gt;
&lt;p&gt;userParameter_mysql.conf&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mysql.status&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;*&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,echo &lt;span class=&quot;token string&quot;&gt;&quot;show global status where Variable_name=&apos;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&apos;;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mysql -N &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;{print &lt;span class=&quot;token variable&quot;&gt;$$&lt;/span&gt;2}&apos;&lt;/span&gt;

&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mysql.size&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;*&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,bash -c &lt;span class=&quot;token string&quot;&gt;&apos;echo &quot;select sum(&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$3&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; both&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt; echo &quot;data_length+index_length&quot;;; data|index) echo &quot;&lt;span class=&quot;token variable&quot;&gt;$3_length&lt;/span&gt;&quot;;; free) echo &quot;data_free&quot;;; esac)) from information_schema.tables&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;all&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot; where table_schema=&lt;span class=&quot;token entity&quot; title=&quot;\&amp;quot;&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;token entity&quot; title=&quot;\&amp;quot;&quot;&gt;\&quot;&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;&lt;span class=&quot;token variable&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;all&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;and table_name=&lt;span class=&quot;token entity&quot; title=&quot;\&amp;quot;&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$2&lt;/span&gt;&lt;span class=&quot;token entity&quot; title=&quot;\&amp;quot;&quot;&gt;\&quot;&lt;/span&gt;&quot;&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;)&lt;/span&gt;&lt;/span&gt;;&quot; | HOME=/var/lib/zabbix mysql -N&apos;&lt;/span&gt;

&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mysql.version,mysql -V
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mysql.ping,&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mysqladmin &lt;span class=&quot;token function&quot;&gt;ping&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -c alive&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Item Key 설정 값&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;status&lt;/td&gt;
&lt;td&gt;mysql.ping&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bytes received per second&lt;/td&gt;
&lt;td&gt;mysql.status[bytes_received]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bytes sent per second&lt;/td&gt;
&lt;td&gt;mysql.status[bytes_sent]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;begin operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_begin]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;commit operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_commit]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;delete operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_delete]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;insert operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_insert]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rollback operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_rollback]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_select]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;update operations per second&lt;/td&gt;
&lt;td&gt;mysql.status[com_update]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;queries per second&lt;/td&gt;
&lt;td&gt;mysql.status[questions]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;slow queries&lt;/td&gt;
&lt;td&gt;mysql.status[slow_queries]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uptime&lt;/td&gt;
&lt;td&gt;mysql.status[uptime]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;version&lt;/td&gt;
&lt;td&gt;mysql.version&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disk used(%)&lt;/td&gt;
&lt;td&gt;vfs.fs.size[/var/lib/mysql&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[방화벽(firewalld) 설정]]></title><description><![CDATA[방화벽(firewalld) 설정 가이드]]></description><link>https://dongjinjo.github.io/posts/setting-firewalld</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/setting-firewalld</guid><pubDate>Thu, 18 Oct 2018 16:51:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;방화벽(firewalld) 설정 가이드&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;서비스 제어&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;service firewalld start&lt;/td&gt;
&lt;td&gt;service 시작&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;service firewalld stop&lt;/td&gt;
&lt;td&gt;service 중지&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --reload&lt;/td&gt;
&lt;td&gt;재시작&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;목록 조회&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --list-all&lt;/td&gt;
&lt;td&gt;default zone 설정 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --list-all-zones&lt;/td&gt;
&lt;td&gt;전체 zone 설정 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --list-all —zone=dmz&lt;/td&gt;
&lt;td&gt;특정 zone 설정 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --get-zones&lt;/td&gt;
&lt;td&gt;zone 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --get-default-zone&lt;/td&gt;
&lt;td&gt;default zone 이름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --get-services&lt;/td&gt;
&lt;td&gt;사전 정의 service 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;추가 &amp;#x26; 삭제&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;--zone=&amp;#x3C;zone&gt;&lt;/strong&gt;
--zone=&amp;#x3C;zone&gt; 옵션이 없을 경우 default zone에 추가, 삭제 됩니다.
{: .notice—info}&lt;/p&gt;
&lt;p&gt;{% capture notice-2 %}
&lt;strong&gt;--permanent&lt;/strong&gt;
firewall-cmd 로 방화벽 정책을 변경 시  즉시 적용되지만 reload 하거나 재부팅 할 경우 정책이 초기화됩니다.
방화벽 정책을 영구적으로 적용하기 위해서는 --permanent 옵션을 사용해야 합니다. 옵션을 사용할 경우 즉시 적용 되지 않아 reload를 수행해야 합니다. &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;—permanent 옵션 사용&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;—permanent 옵션 미사용&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;즉시 적용&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;X&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;정책 영구적용&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;O&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;X&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;{% endcapture %}&lt;/p&gt;
&lt;div class=&quot;notice--info&quot;&gt;{{ notice-2 | markdownify }}&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --add-service=ssh&lt;/td&gt;
&lt;td&gt;ssh service 추가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --remove-service=ssh&lt;/td&gt;
&lt;td&gt;ssh service 삭제&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --add-port=21/tcp&lt;/td&gt;
&lt;td&gt;tcp(21) port 추가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --remove-port=21/tcp&lt;/td&gt;
&lt;td&gt;tcp(21) port 삭제&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --add-source=192.168.0.0/24&lt;/td&gt;
&lt;td&gt;source ip 추가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --remove-source=192.168.0.0/24&lt;/td&gt;
&lt;td&gt;source ip 삭제&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;rich rule&lt;/h2&gt;
&lt;h3&gt;rich rule 규칙&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;rule
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;family&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ipv4|ipv6&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;source &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;not&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;address[/mask]&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;mac-address&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;ipset&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;ipset&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;destination &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;not&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;address&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;/mask&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;port&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;protocol&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;icmp-block&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;icmp-type&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;masquerade&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;forward-port&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;source-port
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;log&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;audit&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;accept&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;reject&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;drop&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;mark&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --add-rich-rule=‘rule ~’&lt;/td&gt;
&lt;td&gt;rich rule 추가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;firewall-cmd --remove-rich-rule=‘rule ~’&lt;/td&gt;
&lt;td&gt;rich rule 삭제&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;rich rule 예제&lt;/h3&gt;
&lt;h4&gt;특정 대역에 대한 모든 연결 허용&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;firewall-cmd --add-rich-rule&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;rule family=&quot;ipv4&quot; source address=&quot;192.168.0.0/24&quot; accept&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;특정 IP에 대한 모든 연결 거부&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;firewall-cmd --add-rich-rule&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;rule family=&quot;ipv4&quot; source address=&quot;192.168.0.10/32&quot; reject&apos;&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;특정 대역에 대한 22 port 연결 허용&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;firewall-cmd --add-rich-rule&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;rule family=&quot;ipv4&quot; source address=&quot;192.168.0.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&apos;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[MongoDB Key 생성 및 Item 설정]]></title><description><![CDATA[Zabbix의 MongoDB 용 Key 생성 및 Item 설정 방법]]></description><link>https://dongjinjo.github.io/posts/zabbix-mongodb-item-key</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/zabbix-mongodb-item-key</guid><pubDate>Thu, 18 Oct 2018 16:51:00 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;Zabbix의 MongoDB 용 Key 생성 및 Item 설정 방법&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Mongo 인증 설정&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# /var/lib/zabbix/.mongo.rc&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token function-name function&quot;&gt;authRequired&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  try &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;db.serverCmdLineOpts&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.code &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  catch &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;authRequired&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  try &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    rs.slaveOk&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    var prev_db &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; db
    db &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; db.getSiblingDB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    db.auth&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    db &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; db.getSiblingDB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prev_db&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  catch &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token builtin class-name&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;UserParameter.conf 추가&lt;/h2&gt;
&lt;p&gt;userParameter_mongo.conf&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.service,ps -ef &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; -v &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;wc&lt;/span&gt; -l
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.network&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;*&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().network&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f1 &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.opcounters&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;*&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().opcounters&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token variable&quot;&gt;$1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.mem_resident,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().mem&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; resident &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.mem_virtual,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().mem&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; virtual &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.mem_mapped,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().mem&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&lt;span class=&quot;token entity&quot; title=&quot;\b&quot;&gt;\b&lt;/span&gt;mapped&lt;span class=&quot;token entity&quot; title=&quot;\b&quot;&gt;\b&lt;/span&gt;&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.connection_current,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().connections.current&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.connection_available,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().connections.available&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.queue_write,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().globalLock.currentQueue.writers&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.queue_reader,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().globalLock.currentQueue.readers&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.cursors_totalOpen,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().cursors.totalOpen&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.cursors_timedOut,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().cursors.timedOut&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.backgroundFlush,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().backgroundFlushing.last_ms&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.rpstatus,echo &lt;span class=&quot;token string&quot;&gt;&quot;rs.status()&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;grep&lt;/span&gt; myState&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;:&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;,&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.pagefaults,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.serverStatus().extra_info.page_faults&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 3p
&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mongo.oplog_storetime,echo &lt;span class=&quot;token string&quot;&gt;&quot;db.printReplicationInfo()&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token assign-left variable&quot;&gt;&lt;span class=&quot;token environment constant&quot;&gt;HOME&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;/var/lib/zabbix mongo &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sed&lt;/span&gt; -n 4p &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;(&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;cut&lt;/span&gt; -d &lt;span class=&quot;token string&quot;&gt;&quot;h&quot;&lt;/span&gt; -f &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Item Key 설정 값&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;key&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;connection available&lt;/td&gt;
&lt;td&gt;mongo.connection_available&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connection current&lt;/td&gt;
&lt;td&gt;mongo.connection_current&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;page faults&lt;/td&gt;
&lt;td&gt;mongo.pagefaults&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;queue reader&lt;/td&gt;
&lt;td&gt;mongo.queue_reader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;queue write&lt;/td&gt;
&lt;td&gt;mongo.queue_write&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;service&lt;/td&gt;
&lt;td&gt;mongo.service&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;disk used(%)&lt;/td&gt;
&lt;td&gt;vfs.fs.size[/var/lib/mongo, pused]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WuXianglong/Zabbix-Templates-Scripts/blob/master/mongo/mongo.conf&quot;&gt;https://github.com/WuXianglong/Zabbix-Templates-Scripts/blob/master/mongo/mongo.conf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://share.zabbix.com/databases/mongodb/mongodb-for-zabbix-3-2&quot;&gt;https://share.zabbix.com/databases/mongodb/mongodb-for-zabbix-3-2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[마크다운(Markdown) 가이드]]></title><description><![CDATA[Markdown은 텍스트 기반의 마크업언어로 2004년 존그루버에 의해 만들어졌으며 쉽게 쓰고 읽을 수 있으며 HTML로 변환이 가능하다. 특수기호와 문자를 이용한 매우 간단한 구조의 문법을 사용하여 웹에서도 보다 빠르게 컨텐츠를 작성하고 보다 직관적으로 인식할 수 있다.]]></description><link>https://dongjinjo.github.io/posts/markdown-guide</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/markdown-guide</guid><pubDate>Wed, 22 Aug 2018 14:34:12 GMT</pubDate><content:encoded>&lt;h2&gt;1. 마크다운에 관하여&lt;/h2&gt;
&lt;h3&gt;1.1. 마크다운이란?&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://whatismarkdown.com/&quot;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;은 텍스트 기반의 마크업언어로 2004년 존그루버에 의해 만들어졌으며 쉽게 쓰고 읽을 수 있으며 HTML로 변환이 가능하다. 특수기호와 문자를 이용한 매우 간단한 구조의 문법을 사용하여 웹에서도 보다 빠르게 컨텐츠를 작성하고 보다 직관적으로 인식할 수 있다.
마크다운이 최근 각광받기 시작한 이유는 깃헙(&lt;a href=&quot;https://github.com&quot;&gt;https://github.com&lt;/a&gt;) 덕분이다. 깃헙의 저장소Repository에 관한 정보를 기록하는 README.md는 깃헙을 사용하는 사람이라면 누구나 가장 먼저 접하게 되는 마크다운 문서였다. 마크다운을 통해서 설치방법, 소스코드 설명, 이슈 등을 간단하게 기록하고 가독성을 높일 수 있다는 강점이 부각되면서 점점 여러 곳으로 퍼져가게 된다.&lt;/p&gt;
&lt;h3&gt;1.2. 마크다운의 장-단점&lt;/h3&gt;
&lt;h4&gt;1.2.1. 장점&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 간결하다.
2. 별도의 도구없이 작성가능하다.
3. 다양한 형태로 변환이 가능하다.
3. 텍스트(Text)로 저장되기 때문에 용량이 적어 보관이 용이하다.
4. 텍스트파일이기 때문에 버전관리시스템을 이용하여 변경이력을 관리할 수 있다.
5. 지원하는 프로그램과 플랫폼이 다양하다.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;1.2.2. 단점&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 표준이 없다.
2. 표준이 없기 때문에 도구에 따라서 변환방식이나 생성물이 다르다.
3. 모든 HTML 마크업을 대신하지 못한다.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h2&gt;2. 마크다운 사용법(문법)&lt;/h2&gt;
&lt;h3&gt;2.1. 헤더Headers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;큰제목: 문서 제목&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;This is an H1
=============&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;This is an H1&lt;/h1&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;작은제목: 문서 부제목&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;This is an H2
-------------&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;This is an H2&lt;/h2&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;글머리: 1~6까지만 지원&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;## This is a H1
### This is a H2
#### This is a H3
##### This is a H4
###### This is a H5
####### This is a H6&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;This is a H1&lt;/h2&gt;
&lt;h3&gt;This is a H2&lt;/h3&gt;
&lt;h4&gt;This is a H3&lt;/h4&gt;
&lt;h5&gt;This is a H4&lt;/h5&gt;
&lt;h6&gt;This is a H5&lt;/h6&gt;
&lt;p&gt;####### This is a H6
######## This is a 7.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2.2. BlockQuote&lt;/h3&gt;
&lt;p&gt;이메일에서 사용하는 &lt;code class=&quot;language-text&quot;&gt;&amp;gt;&lt;/code&gt; 블럭인용문자를 이용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;gt; This is a blockqute.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a first blockqute.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a second blockqute.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a third blockqute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;이 안에서는 다른 마크다운 요소를 포함할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3&gt;This is a H3&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;List&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;code&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;2.3. 목록&lt;/h3&gt;
&lt;h4&gt;● 순서있는 목록(번호)&lt;/h4&gt;
&lt;p&gt;순서있는 목록은 숫자와 점을 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 첫번째
2. 두번째
3. 세번째&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;첫번째&lt;/li&gt;
&lt;li&gt;두번째&lt;/li&gt;
&lt;li&gt;세번째&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;현재까지는 어떤 번호를 입력해도 순서는 내림차순으로 정의된다.&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 첫번째
3. 세번째
2. 두번째&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;첫번째&lt;/li&gt;
&lt;li&gt;세번째&lt;/li&gt;
&lt;li&gt;두번째&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;딱히 개선될 것 같지는 않다. 존 그루버가 신경안쓰고 있다고…&lt;/p&gt;
&lt;h4&gt;● 순서없는 목록(글머리 기호)&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;* 빨강
  * 녹색
    * 파랑

+ 빨강
  + 녹색
    + 파랑

- 빨강
  - 녹색
    - 파랑&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;빨강&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;녹색&lt;/li&gt;
&lt;li&gt;파랑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;빨강&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;녹색&lt;/li&gt;
&lt;li&gt;파랑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;빨강&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;녹색&lt;/li&gt;
&lt;li&gt;파랑&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;혼합해서 사용하는 것도 가능하다(내가 선호하는 방식)&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;* 1단계
    - 2단계
        + 3단계
            = 4단계&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;1단계&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;2단계&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3단계
= 4단계&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2.4. 코드&lt;code class=&quot;language-text&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;4개의 공백 또는 하나의 탭으로 들여쓰기를 만나면 변환되기 시작하여 들여쓰지 않은 행을 만날때까지 변환이 계속된다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;한줄 띄어쓰면 인식이 제대로 안되는 문제가 발생하곤 합니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;This is a normal paragraph:

    This is a code block.
end code block.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;code&gt;
```
This is a normal paragraph:
    This is a code block.
end code block.
```
&lt;/code&gt;
&lt;p&gt;실제로 적용해보면,
This is a normal paragraph:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;This is a code block.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;end code block.&lt;/p&gt;
&lt;h3&gt;2.5. 수평선&lt;code class=&quot;language-text&quot;&gt;&amp;lt;hr/&amp;gt;&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;아래 줄은 모두 수평선을 만든다. 마크다운 문서를 미리보기로 출력할 때 &lt;em&gt;페이지 나누기&lt;/em&gt; 용도로 많이 사용한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;* * *

***

*****

- - -

---------------------------------------&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h3&gt;2.6. 링크&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;참조링크&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[link keyword][id]
[id]: URL &amp;quot;Optional Title here&amp;quot;

Link: [Google][googlelink]
[googlelink]: https://google.com &amp;quot;Go google&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: [Google][googlelink]
[googlelink]: &lt;a href=&quot;https://google.com&quot;&gt;https://google.com&lt;/a&gt; “Go google”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;인라인 링크&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;syntax: [Title](link)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Link: &lt;a href=&quot;https://google.com,&quot; title=&quot;google link&quot;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;자동연결&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;http://example.com/&amp;gt;
&amp;lt;address@example.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
&lt;a href=&quot;mailto:address@example.com&quot;&gt;address@example.com&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;2.7. 강조&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;*single asterisks*
_single underscores_
**double asterisks**
__double underscores__
++underline++
~~cancelline~~&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;
&lt;em&gt;single underscores&lt;/em&gt;
&lt;strong&gt;double asterisks&lt;/strong&gt;
&lt;strong&gt;double underscores&lt;/strong&gt;
++underline++
&lt;del&gt;cancelline&lt;/del&gt;&lt;/p&gt;
&lt;h3&gt;2.8. 이미지&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;![Alt text](/path/to/img.jpg)
![Alt text](/path/to/img.jpg &amp;quot;Optional title&amp;quot;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0&quot; alt=&quot;석촌호수 러버덕&quot;&gt;
&lt;img src=&quot;http://cfile6.uf.tistory.com/image/2426E646543C9B4532C7B0&quot; alt=&quot;석촌호수 러버덕&quot; title=&quot;RubberDuck&quot;&gt;&lt;/p&gt;
&lt;p&gt;사이즈 조절 기능은 없기 때문에 &lt;code class=&quot;language-text&quot;&gt;&amp;lt;img width=&amp;quot;&amp;quot; height=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/img&amp;gt;&lt;/code&gt;를 이용한다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;3. 마크다운 사용기&lt;/h2&gt;
&lt;h3&gt;3.1. 이지윅(WSYWIG) 에디터&lt;/h3&gt;
&lt;p&gt;우리가 흔하게 접하는 웹에서 사용되는 에디터(네이버, 다음, 구글 등)이 대부분 이지웍 에디터에 속하며 기본적으로 HTML을 이용하여 스타일을 적용하여 문장을 꾸미는 형태를 취하게 된다. 그래서 하루패드와 같은 마크다운 에디터의 View 영역의 내용을 복사하여 붙여넣기를 하면 대체적으로 View영역에서 보이는 그대로 복사되는 편이다. 다만, 붙여넣기 이후에 문장들을 수정하려고 할 떄 문제가 되는데, 이는 스타일이 포함된 태그가 수정과정에서 변형되면서 전체적인 영향을 끼치는 탓이다. 티스토리 블로그에서는 쉽지 않고… 워드프레스의 경우에는 마크다운으로 작성된 포스트를 HTML로 변환해주는 기능을 활용하는 것이 좋다.
결론은, &lt;strong&gt;복사해서 붙여넣기하면 가급적이면 본문은 수정하지 않는 것이 좋다.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;3.2. 깃헙Github, 비트버킷Bitbucket과 요비Yobi 등&lt;/h3&gt;
&lt;p&gt;최근 유행하는 협업개발플랫폼의 경우에는 마크다운을 변환하는 컨버터 기능을 기본탑재하고 있기 때문에 마크다운 문법으로 작성한 텍스트를 그대로 복사해서 붙여넣거나 업로드하는 것만으로 마크다운의 적용이 가능하다.&lt;/p&gt;
&lt;h3&gt;3.3. MS워드 적용&lt;/h3&gt;
&lt;p&gt;View 영역의 항목을 그대로 붙여넣거나 HTML 내보내기 등으로 생성한 파일을 불러오는 형태로 사용가능하다. 적용한 헤더를 워드가 읽어드리면서 목차에 적용하기 때문에 이를 활용하면 목차까지도 손쉽게 적용이 가능해진다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;4. 정리&lt;/h2&gt;
&lt;p&gt;마크다운은 기본문법만 알고 있다면 일반 텍스트편집기에서도 손쉽게 작성이 가능한 마크업언어다. 현재 다양한 도구와 플랫폼에서 지원하고 있기 때문에 더욱 손쉽게 스타일적용된 문서를 작성할 수 있기 때문에 점점 널리 사용되고 있다. 마크다운을 이해하고 사용하면서 쉽고 빠르게 스타일문서를 작성해보세요.
저는 Dropbox 프로를 구매해서 집-랩탑-스마트폰이 각각 연동을 시켜서 사용하고 있습니다. 드랍박스에 저장된 마크다운 문서는 Dropbox 웹서비스 상에서 제공하기 때문에 웹상에서 바로 열람할 수도 있어 링크를 걸어서 다른 사람과 공유하는 형식으로 사용하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;링크 예: &lt;a href=&quot;https://www.dropbox.com/s/1e7hbtd0yr0egft/20141021_markdown_use_tip.md?dl=0&quot;&gt;Markdown 설명&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;○ 참고문서&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mashable.com/2013/06/24/markdown-tools/&quot;&gt;78 Tools for writing and previewing Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nolboo.github.io/blog/2013/09/07/john-gruber-markdown/&quot;&gt;John gruber 마크다운 번역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://nolboo.github.io/blog/2014/03/25/github-flavored-markdown/&quot;&gt;깃허브 취향의 마크다운 번역&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/ihoneymon/ss-40575068&quot;&gt;허니몬의 마크다운 작성법&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Welcome to Jekyll!]]></title><description><![CDATA[You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.]]></description><link>https://dongjinjo.github.io/posts/welcome-to-jekyll</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/welcome-to-jekyll</guid><pubDate>Wed, 22 Aug 2018 14:34:12 GMT</pubDate><content:encoded>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-text&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-text&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;
&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;language-text&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;language-text&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;
&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;
&lt;p&gt;{% highlight ruby %}
def print&lt;em&gt;hi(name)
puts “Hi, #{name}”
end
print&lt;/em&gt;hi(‘Tom’)&lt;/p&gt;
&lt;h1&gt;=&gt; prints ‘Hi, Tom’ to STDOUT.&lt;/h1&gt;
&lt;p&gt;{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Custom Key 생성 방법(UserParameter)]]></title><description><![CDATA[신규 Item Key 생성 및 테스트 진행]]></description><link>https://dongjinjo.github.io/posts/zabbix-create-custom-key</link><guid isPermaLink="false">https://dongjinjo.github.io/posts/zabbix-create-custom-key</guid><pubDate>Wed, 22 Aug 2018 14:34:12 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;신규 Item Key 생성 및 테스트 진행&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Command 작성&lt;/h2&gt;
&lt;p&gt;예제는 &lt;code class=&quot;language-text&quot;&gt;mysql -V&lt;/code&gt; Command를 통해 신규 Item Key 등록 합니다. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# mysql -V&lt;/span&gt;
mysql  Ver &lt;span class=&quot;token number&quot;&gt;15.1&lt;/span&gt; Distrib &lt;span class=&quot;token number&quot;&gt;5.5&lt;/span&gt;.56-MariaDB, &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Linux &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x86_64&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; using readline &lt;span class=&quot;token number&quot;&gt;5.1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;작성 유의사항&lt;/strong&gt;
Command 결과는 실 데이터만 존재 해야 합니다.
예) CPU 사용율 : 50% =&gt; X, 50 =&gt; O
{: .notice—warning}&lt;/p&gt;
&lt;h2&gt;UserParameter.conf 설정&lt;/h2&gt;
&lt;p&gt;새로운 UserParameter.conf 파일에 Command를 입력합니다. &lt;/p&gt;
&lt;p&gt;형식 : UserParameter=key,command
{: .notice—info}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;vi&lt;/span&gt; /etc/zabbix/zabbix_agentd/UserParameter_MySQL.conf

&lt;span class=&quot;token assign-left variable&quot;&gt;UserParameter&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;mysql.version,mysql -V&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Agent 재시작&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt; zabbix-agent restart&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;테스트&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# zabbix_agentd -t mysql.version&lt;/span&gt;
mysql.version &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;t&lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt;mysql  Ver &lt;span class=&quot;token number&quot;&gt;15.1&lt;/span&gt; Distrib &lt;span class=&quot;token number&quot;&gt;5.5&lt;/span&gt;.56-MariaDB, &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Linux &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;x86_64&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; using readline &lt;span class=&quot;token number&quot;&gt;5.1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;신규 Item Key는 설정한 Agent에서만 동작하므로 필요한 모든 Agent에 설정이 필요합니다.
{: .notice—danger}&lt;/p&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zabbix.com/documentation/3.2/manual/config/items/userparameters&quot;&gt;https://www.zabbix.com/documentation/3.2/manual/config/items/userparameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>